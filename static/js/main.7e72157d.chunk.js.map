{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","findUser","classNames","TodoList","todos","map","App","useState","todosFromServer","setTodos","userIdError","setUserIdError","inputTitleError","setInputTitleError","setUserId","inputTitle","setInputTitle","action","method","type","placeholder","value","onChange","event","newInput","target","required","newUser","disabled","item","onClick","preventDefault","length","newTodo","sort","todo1","todo2","curentTodos","ReactDOM","render","document","getElementById"],"mappings":"sMAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,uBCVCC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCL,EAAgBK,EAAhBL,MAAOF,EAASO,EAATP,KAEf,OACE,mBAAGQ,UAAU,WAAWC,KAAI,iBAAYP,GAAxC,SACGF,KCFMU,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCZ,EAIEY,EAJFZ,GACAI,EAGEQ,EAHFR,MACAE,EAEEM,EAFFN,OACAD,EACEO,EADFP,UAGIG,EAAOK,EAAgBC,MAAK,SAACC,GAAD,OAAcA,EAASf,KAAOM,KAEhE,OACE,0BACE,UAASN,EACTS,UAAWO,IAAW,WAAY,CAChC,sBAAuBX,IAH3B,UAME,oBAAII,UAAU,kBAAd,SAAiCL,IAEhCI,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCrBlBS,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KACL,SAACP,GAAD,OACE,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKZ,UCL7BoB,EAAM,WACjB,MAA0BC,mBAAiBC,GAA3C,mBAAOJ,EAAP,KAAcK,EAAd,KAEA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8CJ,oBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KAEA,EAA4BN,mBAAS,GAArC,mBAAOf,EAAP,KAAesB,EAAf,KACA,EAAoCP,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KA8CA,OACE,sBAAKrB,UAAU,MAAf,UACE,+CAEA,uBAAMsB,OAAO,aAAaC,OAAO,OAAjC,UACE,sBAAKvB,UAAU,QAAf,UACE,uBACEwB,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAON,EACPO,SAAU,SAACC,GAAD,OAlDOC,EAkDsBD,EAAME,OAAOJ,MAjD5DR,GAAmB,QACnBG,EAAcQ,GAFU,IAACA,KAoDlBZ,GACC,sBAAMjB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACR+B,UAAQ,EACRL,MAAO7B,EACPL,KAAK,SACLmC,SAAU,SAACC,GAAD,OA1DMI,GA0DuBJ,EAAME,OAAOJ,MAzD5DV,GAAe,QACfG,EAAUa,GAFa,IAACA,GAqDlB,UAOE,wBAAQN,MAAM,IAAIO,UAAQ,EAA1B,2BAGC7B,EAAgBM,KAAI,SAACwB,GAAD,OACnB,wBAAQR,MAAOQ,EAAK3C,GAApB,SACG2C,EAAK1C,MADqB0C,EAAK3C,UAMrCwB,GAAe,sBAAMf,UAAU,QAAhB,qCAGlB,wBAAQwB,KAAK,SAAS,UAAQ,eAAeW,QApE5B,SACrBP,GAYA,GAVAA,EAAMQ,iBAEDvC,GACHmB,GAAe,GAGZI,EAAWiB,QACdnB,GAAmB,GAGhBE,EAAWiB,QAAWxC,EAA3B,CAIA,IAAMyC,EAAU,CACd/C,GAAI,YAAIkB,GACL8B,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMlD,GAAKiD,EAAMjD,MAAI,GAAGA,GAAK,EACvDI,MAAOyB,EACPxB,WAAW,EACXC,UAGFiB,GAAS,SAAC4B,GAAD,4BAAqBA,GAArB,CAAkCJ,OAvC3CnB,EAAU,GACVE,EAAc,MAiFV,oBAKF,cAAC,EAAD,CAAUZ,MAAOA,QCtGvBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7e72157d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = todo;\n\n  const user = usersFromServer.find((findUser) => findUser.id === userId);\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(\n        (todo) => (\n          <TodoInfo todo={todo} key={todo.id} />\n        ),\n      )}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const [userIdError, setUserIdError] = useState(false);\n  const [inputTitleError, setInputTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [inputTitle, setInputTitle] = useState('');\n\n  const resetFunc = () => {\n    setUserId(0);\n    setInputTitle('');\n  };\n\n  const handleInputChange = (newInput: string) => {\n    setInputTitleError(false);\n    setInputTitle(newInput);\n  };\n\n  const handleUserChange = (newUser: number) => {\n    setUserIdError(false);\n    setUserId(newUser);\n  };\n\n  const handleAddClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setUserIdError(true);\n    }\n\n    if (!inputTitle.length) {\n      setInputTitleError(true);\n    }\n\n    if (!inputTitle.length || !userId) {\n      return;\n    }\n\n    const newTodo = {\n      id: [...todos]\n        .sort((todo1, todo2) => todo2.id - todo1.id)[0].id + 1,\n      title: inputTitle,\n      completed: false,\n      userId,\n    };\n\n    setTodos((curentTodos) => [...curentTodos, newTodo]);\n    resetFunc();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={inputTitle}\n            onChange={(event) => handleInputChange(event.target.value)}\n          />\n          {inputTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            name=\"userId\"\n            onChange={(event) => handleUserChange(+event.target.value)}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((item) => (\n              <option value={item.id} key={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onClick={handleAddClick}>\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}